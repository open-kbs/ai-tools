{
  "userId": "public",
  "appId": "66e00affa25c",
  "active": true,
  "category": "technology",
  "chatVendor": "anthropic",
  "kbDescription": "Enable top chat models to perform internet searches, web browsing, and other API-supported tasks.",
  "kbTitle": "AI Tools",
  "model": "claude-sonnet-4-20250514",
  "inputTools": [
    "imageToText",
    "speechToText"
  ],
  "installation": {
    "requireAtLeastOneOptional": true
  },
  "embeddingModel": "text-embedding-3-small",
  "embeddingDimension": 1536,
  "searchEngine": "IndexedDB",
  "itemTypes": {},
  "optionalServices": [
    {
      "codeSnippet": "        [/\\/?googleSearch\\(\"(.*)\"\\)/, async (match) => {\n            const q = match[1];\n            try {\n                const response = await openkbs.googleSearch(q, {});\n                const data = response?.map(({ title, link, snippet, pagemap }) => ({\n                    title, link, snippet, image: pagemap?.metatags?.[0]?.[\"og:image\"]\n                }));\n                return { data };\n            } catch (e) {\n                return { error: e.message };\n            }\n        }],",
      "instructionSnippet": "/googleSearch(\"query\")\nDescription: \"\"\"\nGet results from Google Search API.\n\"\"\"",
      "interface": "internet-search",
      "type": "backend-chat-function"
    },
    {
      "codeSnippet": "        [/\\/?webpageToText\\(\"(.*)\"\\)/, async (match) => {\n            try {\n                let response = await openkbs.webpageToText(match[1]);\n                if(!response?.url) return { data: { error: \"Unable to read website\" } };\n                return { data: response };\n            } catch (e) {\n                return { error: e.response?.data || e };\n            }\n        }],",
      "instructionSnippet": "/webpageToText(\"URL\")\nDescription: \"\"\"\nUse this API to extract a website to text.\n\"\"\"",
      "interface": "webpage-to-text",
      "type": "backend-chat-function"
    },
    {
      "codeSnippet": "        [/\\/?documentToText\\(\"(.*)\"\\)/, async (match) => {\n            try {\n                let response = await openkbs.documentToText(match[1]);\n                return { data: response };\n            } catch (e) {\n                return { error: e.response.data };\n            }\n        }],",
      "instructionSnippet": "/documentToText(\"documentURL\")\nDescription: \"\"\"\nExtracts text from document URL - csv, text, pdf, docx, doc, xls, xlsx, etc.\n\"\"\"",
      "interface": "doc-to-text",
      "type": "backend-chat-function"
    },
    {
      "codeSnippet": "        [/\\/?imageToText\\(\"(.*)\"\\)/, async (match) => {\n            try {\n                let response = await openkbs.imageToText(match[1]);\n\n                if (response?.detections?.[0]?.txt) {\n                    response = { detections: response?.detections?.[0]?.txt };\n                }\n\n                return { data: response };\n            } catch (e) {\n                return { error: e.response.data };\n            }\n        }],",
      "instructionSnippet": "/imageToText(\"imageURL\")\nDescription: \"\"\"\nExtracts text from images and returns the result (OCR).\n\"\"\"",
      "interface": "ocr",
      "type": "backend-chat-function"
    }
  ],
  "requiredServices": [
    {
      "instructionSnippet": "Every time you type one of the commands below, an API call will be made, and you will get a response from the system.\nStop generating text after commands - wait for results in the next message\nMultiple commands in one message (each on a new line) will all execute and their results returned as an array\n\nAvailable commands:",
      "interface": "text-generation",
      "type": "main-chat-model"
    }
  ],
  "slug": "ai-tools"
}
